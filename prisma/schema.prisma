generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  username String?   @unique
  name     String?
  email    String?   @unique
  type     UserType? @default(Member)

  likes         Like[]
  posts         Post[]
  Group         Group?  @relation(fields: [groupGroup_id], references: [group_id])
  groupGroup_id String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Hashtag {
  hashtag_id String @id @default(cuid())
  title      String @unique
  posts      Post[]
}

model Post {
  post_id          String     @id @default(cuid())
  parent_id        String?
  author_id        String
  text_content     String
  medias           String[]
  likes_count      Int        @default(0)
  group_id         String?
  created_at       DateTime   @default(now())
  comments_count   Int        @default(0)
  likes            Like[]
  author           User       @relation(fields: [author_id], references: [id])
  group            Group?     @relation(fields: [group_id], references: [group_id])
  parent           Post?      @relation("PostToPost", fields: [parent_id], references: [post_id])
  comments         Post[]     @relation("PostToPost")
  hashtags         Hashtag[]
  categories       Category[] @relation("PostCategories")
  is_advertisement Boolean    @default(false)
}

model Like {
  like_id String @id @default(cuid())
  user_id String
  post_id String
  post    Post   @relation(fields: [post_id], references: [post_id])
  user    User   @relation(fields: [user_id], references: [id])
}

model Group {
  group_id String @id @default(cuid())
  alias    String @unique
  posts    Post[]
  users    User[]
}

model Category {
  category_id String @id @default(cuid())
  slug        String @unique
  title       String
  posts       Post[] @relation("PostCategories")
}

enum UserType {
  Member
  Advertiser
}
